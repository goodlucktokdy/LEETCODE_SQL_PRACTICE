-- -- -- -- -- -- -- -- -- -- -- -- -- -- # Write your MySQL query statement below
-- -- -- -- -- -- -- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- -- -- --         distinct
-- -- -- -- -- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- -- -- -- -- -- --         min(score) over (partition by exam_id) as min_score,
-- -- -- -- -- -- -- -- -- -- -- -- -- --         max(score) over (partition by exam_id) as max_score
-- -- -- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- -- -- --         Exam
-- -- -- -- -- -- -- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- -- -- -- -- -- -- ,filter_students as (
-- -- -- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- -- -- --         distinct
-- -- -- -- -- -- -- -- -- -- -- -- -- --         student_id
-- -- -- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- -- -- --         base 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     where 
-- -- -- -- -- -- -- -- -- -- -- -- -- --         score = min_score or score = max_score
-- -- -- -- -- -- -- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- -- -- -- -- -- -- --     a.student_id,
-- -- -- -- -- -- -- -- -- -- -- -- -- --     b.student_name
-- -- -- -- -- -- -- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     base a
-- -- -- -- -- -- -- -- -- -- -- -- -- -- left join 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     Student b 
-- -- -- -- -- -- -- -- -- -- -- -- -- -- on 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- -- -- -- -- -- where 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     a.student_id not in (select student_id from filter_students)
-- -- -- -- -- -- -- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- -- -- -- -- -- -- --     a.student_id 
-- -- -- -- -- -- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- -- --         ifnull(b.exam_id,0) as exam_id,
-- -- -- -- -- -- -- -- -- -- -- -- --         a.student_id,
-- -- -- -- -- -- -- -- -- -- -- -- --         a.student_name,
-- -- -- -- -- -- -- -- -- -- -- -- --         ifnull(b.score,0) as score
-- -- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- -- --         Student a 
-- -- -- -- -- -- -- -- -- -- -- -- --     left join 
-- -- -- -- -- -- -- -- -- -- -- -- --         Exam b 
-- -- -- -- -- -- -- -- -- -- -- -- --     on 
-- -- -- -- -- -- -- -- -- -- -- -- --         a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- -- -- -- -- last_info as (
-- -- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- -- -- -- --         student_name,
-- -- -- -- -- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score asc) as low_ranks,
-- -- -- -- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as high_ranks
-- -- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- -- --         base
-- -- -- -- -- -- -- -- -- -- -- -- --     where 
-- -- -- -- -- -- -- -- -- -- -- -- --         exam_id != 0
-- -- -- -- -- -- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- -- -- -- -- -- --     student_id,
-- -- -- -- -- -- -- -- -- -- -- -- --     student_name
-- -- -- -- -- -- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- -- -- -- -- -- --     last_info
-- -- -- -- -- -- -- -- -- -- -- -- -- where 
-- -- -- -- -- -- -- -- -- -- -- -- --     student_id not in (select student_id from last_info where low_ranks = 1 or high_ranks = 1)
-- -- -- -- -- -- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- -- -- -- -- -- --     student_id
-- -- -- -- -- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- --         a.student_id,
-- -- -- -- -- -- -- -- -- -- -- --         a.student_name,
-- -- -- -- -- -- -- -- -- -- -- --         b.exam_id,
-- -- -- -- -- -- -- -- -- -- -- --         b.score
-- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- --         Student a 
-- -- -- -- -- -- -- -- -- -- -- --     left join 
-- -- -- -- -- -- -- -- -- -- -- --         Exam b
-- -- -- -- -- -- -- -- -- -- -- --     on 
-- -- -- -- -- -- -- -- -- -- -- --         a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- -- -- -- final_info as (
-- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- -- -- --         student_name,
-- -- -- -- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as ranks,
-- -- -- -- -- -- -- -- -- -- -- --         count(exam_id) over (partition by exam_id) as cnts
-- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- --         base 
-- -- -- -- -- -- -- -- -- -- -- --     where 
-- -- -- -- -- -- -- -- -- -- -- --         student_id not in (select student_id from base group by student_id having count(exam_id) = 0)
-- -- -- -- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- -- -- -- last_info as (
-- -- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- -- -- --         student_name,
-- -- -- -- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- -- -- -- --         ranks,
-- -- -- -- -- -- -- -- -- -- -- --         max(ranks) over (partition by exam_id) as max_ranks
-- -- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- -- --         final_info
-- -- -- -- -- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- -- -- -- -- --     student_id,
-- -- -- -- -- -- -- -- -- -- -- --     student_name
-- -- -- -- -- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- -- -- -- -- --     last_info
-- -- -- -- -- -- -- -- -- -- -- -- where 
-- -- -- -- -- -- -- -- -- -- -- --     student_id not in (select student_id from last_info where ranks = 1 or ranks = max_ranks)
-- -- -- -- -- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- -- -- -- -- --     student_id asc


-- -- -- -- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- --         a.student_id,
-- -- -- -- -- -- -- -- -- -- --         a.student_name,
-- -- -- -- -- -- -- -- -- -- --         b.exam_id,
-- -- -- -- -- -- -- -- -- -- --         b.score
-- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- --         Student a
-- -- -- -- -- -- -- -- -- -- --     inner join 
-- -- -- -- -- -- -- -- -- -- --         Exam b
-- -- -- -- -- -- -- -- -- -- --     on 
-- -- -- -- -- -- -- -- -- -- --         a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- -- -- final_info as (
-- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- -- --         student_name,
-- -- -- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as highs,
-- -- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score) as lows
-- -- -- -- -- -- -- -- -- -- --     from
-- -- -- -- -- -- -- -- -- -- --         base
-- -- -- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- -- -- last_info as (
-- -- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- -- --         student_name
-- -- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- -- --         final_info
-- -- -- -- -- -- -- -- -- -- --     where
-- -- -- -- -- -- -- -- -- -- --         highs = 1 or lows = 1
-- -- -- -- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- -- -- -- --     a.student_id,
-- -- -- -- -- -- -- -- -- -- --     a.student_name
-- -- -- -- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- -- -- -- --     base a 
-- -- -- -- -- -- -- -- -- -- -- left join 
-- -- -- -- -- -- -- -- -- -- --     last_info b 
-- -- -- -- -- -- -- -- -- -- -- on 
-- -- -- -- -- -- -- -- -- -- --     a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- -- -- where 
-- -- -- -- -- -- -- -- -- -- --     b.student_id is null
-- -- -- -- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- -- -- -- --     a.student_id    
-- -- -- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- --         a.student_id,
-- -- -- -- -- -- -- -- -- --         a.student_name,
-- -- -- -- -- -- -- -- -- --         b.exam_id,
-- -- -- -- -- -- -- -- -- --         b.score
-- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- --         Student a 
-- -- -- -- -- -- -- -- -- --     inner join 
-- -- -- -- -- -- -- -- -- --         Exam b 
-- -- -- -- -- -- -- -- -- --     on 
-- -- -- -- -- -- -- -- -- --         a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- -- exams as (
-- -- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- -- --         student_name,
-- -- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as ranks,
-- -- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score asc) as low_ranks
-- -- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- -- --         base
-- -- -- -- -- -- -- -- -- -- ) 
-- -- -- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- -- -- --     student_id,
-- -- -- -- -- -- -- -- -- --     student_name
-- -- -- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- -- -- --     exams a 
-- -- -- -- -- -- -- -- -- -- where not exists (select 1 from exams b where a.student_id = b.student_id 
-- -- -- -- -- -- -- -- -- --                     and (b.ranks = 1 or b.low_ranks = 1))
-- -- -- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- -- -- --     student_id
-- -- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- --         a.student_id,
-- -- -- -- -- -- -- -- --         a.student_name,
-- -- -- -- -- -- -- -- --         b.exam_id,
-- -- -- -- -- -- -- -- --         b.score
-- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- --         Student a 
-- -- -- -- -- -- -- -- --     inner join 
-- -- -- -- -- -- -- -- --         Exam b 
-- -- -- -- -- -- -- -- --     on 
-- -- -- -- -- -- -- -- --         a.student_id = b.student_id
-- -- -- -- -- -- -- -- -- ),
-- -- -- -- -- -- -- -- -- ranks_cte as (
-- -- -- -- -- -- -- -- --     select 
-- -- -- -- -- -- -- -- --         exam_id,
-- -- -- -- -- -- -- -- --         student_id,
-- -- -- -- -- -- -- -- --         student_name,
-- -- -- -- -- -- -- -- --         score,
-- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score) as low_ranks,
-- -- -- -- -- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as high_ranks
-- -- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- -- --         base 
-- -- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- -- --     student_id,
-- -- -- -- -- -- -- -- --     student_name
-- -- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- -- --     ranks_cte a 
-- -- -- -- -- -- -- -- -- where 
-- -- -- -- -- -- -- -- --     not exists (select 1 from ranks_cte b 
-- -- -- -- -- -- -- -- --                     where a.student_id = b.student_id 
-- -- -- -- -- -- -- -- --                     and (b.low_ranks = 1 or b.high_ranks = 1))
-- -- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- -- --     student_id











-- -- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- -- --     select
-- -- -- -- -- -- -- --         e.exam_id,
-- -- -- -- -- -- -- --         e.student_id,
-- -- -- -- -- -- -- --         s.student_name,
-- -- -- -- -- -- -- --         e.score,
-- -- -- -- -- -- -- --         dense_rank() over (partition by e.exam_id order by e.score desc) as high_ranks,
-- -- -- -- -- -- -- --         dense_rank() over (partition by e.exam_id order by e.score asc) as low_ranks
-- -- -- -- -- -- -- --     from 
-- -- -- -- -- -- -- --         Exam e
-- -- -- -- -- -- -- --     inner join 
-- -- -- -- -- -- -- --         Student s
-- -- -- -- -- -- -- --     on 
-- -- -- -- -- -- -- --         e.student_id = s.student_id
-- -- -- -- -- -- -- -- )
-- -- -- -- -- -- -- -- select 
-- -- -- -- -- -- -- --     distinct
-- -- -- -- -- -- -- --     student_id,
-- -- -- -- -- -- -- --     student_name
-- -- -- -- -- -- -- -- from 
-- -- -- -- -- -- -- --     base a 
-- -- -- -- -- -- -- -- where 
-- -- -- -- -- -- -- --     not exists (select 1 from base b 
-- -- -- -- -- -- -- --                 where a.student_id = b.student_id and (b.high_ranks = 1 or b.low_ranks = 1))
-- -- -- -- -- -- -- -- order by 
-- -- -- -- -- -- -- --     student_id
-- -- -- -- -- -- -- with base as (
-- -- -- -- -- -- --     select 
-- -- -- -- -- -- --         e.exam_id,
-- -- -- -- -- -- --         s.student_id,
-- -- -- -- -- -- --         s.student_name,
-- -- -- -- -- -- --         e.score,
-- -- -- -- -- -- --         dense_rank() over (partition by e.exam_id order by e.score desc) as high_ranks,
-- -- -- -- -- -- --         dense_rank() over (partition by e.exam_id order by e.score asc) as low_ranks
-- -- -- -- -- -- --     from 
-- -- -- -- -- -- --         Student s 
-- -- -- -- -- -- --     inner join 
-- -- -- -- -- -- --         Exam e 
-- -- -- -- -- -- --     on 
-- -- -- -- -- -- --         s.student_id = e.student_id
-- -- -- -- -- -- -- )
-- -- -- -- -- -- -- select 
-- -- -- -- -- -- --     distinct 
-- -- -- -- -- -- --     student_id,
-- -- -- -- -- -- --     student_name
-- -- -- -- -- -- -- from 
-- -- -- -- -- -- --     base a 
-- -- -- -- -- -- -- where not exists 
-- -- -- -- -- -- --     (select 1 from base b 
-- -- -- -- -- -- --         where a.student_id = b.student_id and (b.high_ranks = 1 or b.low_ranks = 1))
-- -- -- -- -- -- -- order by 
-- -- -- -- -- -- --     student_id 
-- -- -- -- -- -- with base as (
-- -- -- -- -- --     select 
-- -- -- -- -- --         exam_id,
-- -- -- -- -- --         student_id,
-- -- -- -- -- --         student_name,
-- -- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as high_score,
-- -- -- -- -- --         dense_rank() over (partition by exam_id order by score asc) as low_score
-- -- -- -- -- --     from (
-- -- -- -- -- --         select 
-- -- -- -- -- --             e.exam_id,
-- -- -- -- -- --             s.student_id,
-- -- -- -- -- --             s.student_name,
-- -- -- -- -- --             e.score
-- -- -- -- -- --         from 
-- -- -- -- -- --             Exam e 
-- -- -- -- -- --         inner join 
-- -- -- -- -- --             Student s 
-- -- -- -- -- --         on 
-- -- -- -- -- --             e.student_id = s.student_id
-- -- -- -- -- --     ) a 
-- -- -- -- -- -- )
-- -- -- -- -- -- select 
-- -- -- -- -- --     distinct 
-- -- -- -- -- --     student_id,
-- -- -- -- -- --     student_name
-- -- -- -- -- -- from 
-- -- -- -- -- --     base a 
-- -- -- -- -- -- where 
-- -- -- -- -- --     not exists
-- -- -- -- -- --         (select 1 from base b 
-- -- -- -- -- --         where a.student_id = b.student_id and (b.high_score = 1 or b.low_score = 1))
-- -- -- -- -- -- order by 
-- -- -- -- -- --     student_id
-- -- -- -- -- with base as (
-- -- -- -- --     select 
-- -- -- -- --         exam_id,
-- -- -- -- --         student_id,
-- -- -- -- --         student_name,
-- -- -- -- --         score,
-- -- -- -- --         dense_rank() over (partition by exam_id order by score desc) as high_ranks,
-- -- -- -- --         dense_rank() over (partition by exam_id order by score asc) as low_ranks
-- -- -- -- --     from (
-- -- -- -- --         select 
-- -- -- -- --             a.exam_id,
-- -- -- -- --             b.student_id,
-- -- -- -- --             b.student_name,
-- -- -- -- --             sum(a.score) as score
-- -- -- -- --         from 
-- -- -- -- --             Exam a 
-- -- -- -- --         inner join 
-- -- -- -- --             Student b 
-- -- -- -- --         on 
-- -- -- -- --             a.student_id = b.student_id
-- -- -- -- --         group by 
-- -- -- -- --             a.exam_id, b.student_id, b.student_name
-- -- -- -- --     ) a
-- -- -- -- -- )
-- -- -- -- -- select 
-- -- -- -- --     distinct 
-- -- -- -- --     student_id,
-- -- -- -- --     student_name
-- -- -- -- -- from 
-- -- -- -- --     base a 
-- -- -- -- -- where 
-- -- -- -- --     not exists 
-- -- -- -- --         (select 1 from base b 
-- -- -- -- --             where a.student_id = b.student_id 
-- -- -- -- --             and (b.high_ranks = 1 or b.low_ranks = 1))
-- -- -- -- -- order by 
-- -- -- -- --     student_id 
-- -- -- -- with base as (
-- -- -- --     select 
-- -- -- --         a.exam_id,
-- -- -- --         b.student_id,
-- -- -- --         b.student_name,
-- -- -- --         a.score,
-- -- -- --         dense_rank() over (partition by a.exam_id order by a.score desc) as high_ranks,
-- -- -- --         dense_rank() over (partition by a.exam_id order by a.score asc) as low_ranks
-- -- -- --     from 
-- -- -- --         Exam a 
-- -- -- --     inner join 
-- -- -- --         Student b 
-- -- -- --     on 
-- -- -- --         a.student_id = b.student_id 
-- -- -- -- )
-- -- -- -- select 
-- -- -- --     distinct 
-- -- -- --     student_id,
-- -- -- --     student_name
-- -- -- -- from 
-- -- -- --     base a 
-- -- -- -- where not exists
-- -- -- --     (select 1 from base b 
-- -- -- --         where a.student_id = b.student_id and (b.high_ranks = 1 or b.low_ranks = 1))
-- -- -- -- order by 
-- -- -- --     student_id 
-- -- -- with base as (
-- -- --     select 
-- -- --         a.exam_id,
-- -- --         a.student_id,
-- -- --         b.student_name,
-- -- --         a.score,
-- -- --         dense_rank() over (partition by a.exam_id order by a.score desc) as high_ranks,
-- -- --         dense_rank() over (partition by a.exam_id order by a.score asc) as low_ranks
-- -- --     from 
-- -- --         Exam a 
-- -- --     inner join 
-- -- --         Student b 
-- -- --     on 
-- -- --         a.student_id = b.student_id 
-- -- -- )
-- -- -- select 
-- -- --     distinct
-- -- --     student_id,
-- -- --     student_name
-- -- -- from 
-- -- --     base a 
-- -- -- where not exists
-- -- --     (select 1 from base b 
-- -- --         where a.student_id = b.student_id and (b.high_ranks = 1 or b.low_ranks = 1))
-- -- -- order by 
-- -- --     student_id 
-- -- with base as (
-- --     select 
-- --         a.exam_id,
-- --         a.student_id,
-- --         a.score,
-- --         b.student_name,
-- --         dense_rank() over (partition by a.exam_id order by a.score desc) as high_ranks,
-- --         dense_rank() over (partition by a.exam_id order by a.score asc) as low_ranks
-- --     from 
-- --         Exam a 
-- --     inner join 
-- --         Student b 
-- --     on 
-- --         a.student_id = b.student_id 
-- -- )
-- -- select 
-- --     distinct
-- --     student_id,
-- --     student_name
-- -- from 
-- --     base a 
-- -- where not exists 
-- --     (select 1 from base b 
-- --         where a.student_id = b.student_id and (b.high_ranks = 1 or b.low_ranks = 1))
-- -- order by 
-- --     student_id
-- with base as (
--     select 
--         a.exam_id,
--         a.student_id,
--         b.student_name,
--         a.score,
--         dense_rank() over (partition by a.exam_id order by a.score desc) as high_score,
--         dense_rank() over (partition by a.exam_id order by a.score asc) as low_score
--     from 
--         Exam a 
--     inner join 
--         Student b 
--     on 
--         a.student_id = b.student_id
-- )
-- select 
--     distinct 
--     student_id,
--     student_name
-- from 
--     base a 
-- where not exists 
--     (select 1 from base b 
--         where a.student_id = b.student_id and (b.high_score = 1 or b.low_score = 1))
-- order by 
--     student_id
with base as (
    select 
        a.exam_id,
        a.student_id,
        b.student_name,
        a.score,
        dense_rank() over (partition by a.exam_id order by a.score desc) as high_score,
        dense_rank() over (partition by a.exam_id order by a.score asc) as low_score
    from 
        Exam a 
    inner join 
        Student b 
    on 
        a.student_id = b.student_id 
)
select 
    distinct 
    student_id,
    student_name
from 
    base a
where not exists 
    (select 1 from base b 
        where a.student_id = b.student_id and (b.high_score = 1 or b.low_score = 1))
order by 
    student_id 